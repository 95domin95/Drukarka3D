@model Drukarka3DData.Models.FavouriteProjectsViewModel

<script src="/lib/jquery/dist/jquery.js"></script>
<script src="/js/jquery.rateyo.min.js"></script>

<div class="row">
    <div class="col-sm-12">
        <h3>@ViewData["Title"]</h3>
    </div>
</div>

@*@await this.Component.InvokeAsync("Pager", new { pagingList = this.Model })*@

<div class="row" id="gallery-filter-menu">
    @*<div class="col-lg-4 col-lg-offset-4 col-md-6 col-md-offset-3 col-sm-8 col-sm-offset-2 col-xs-10 col-xs-offset-1" style="margin-bottom: 10px">*@
    <form asp-controller="Account" asp-action="FavouriteProjectsAsync" method="get" id="index-form">
        <div class="col-sm-4">
            <div class="gallery-search-inputs">
                Sortuj:
            </div>
            <select name="sortExpression" class="form-control">
                 @{ List<string> sortExpression = new List<string>();
                     sortExpression.Add("Najnowsze"); sortExpression.Add("Alfabetycznie");
                     sortExpression.Add("Liczba wyświetleń"); sortExpression.Add("Liczba polubień");}
                @foreach (var i in sortExpression)
                {
                    @if (i.Equals(Model.SortExpression))
                    {
                        <option value="@i" selected>@i</option>
                    }
                    else
                    {
                        <option value="@i">@i</option>

                    }

                }
            </select>
        </div>
        <div class="col-sm-4">
            <div class="gallery-search-inputs">
                Ilość elementów na stronie:
            </div>
            <select name="onPage" class="form-control">
                @{ List<int> onPageValue = new List<int>();
                    onPageValue.Add(10); onPageValue.Add(20);
                    onPageValue.Add(50); onPageValue.Add(100);}
                @foreach (var i in onPageValue)
                {
                    @if (i.Equals(Convert.ToInt32(Model.OnPage)))
                    {
                        <option value="@i" selected>@i</option>
                    }
                    else
                    {
                        <option value="@i">@i</option>

                    }

                }
            </select>
        </div>
        <div class="col-sm-4">
            <div class="gallery-search-inputs">
                Wyszukaj:
            </div>
            <input type="text" class="form-control" placeholder="Wpisz frazę..." name="filter" value="@Model.Filter" />
        </div>
        <div class="col-sm-12" style="margin-top: 15px">
            <button type="submit" class="btn btn-primary"><strong>Filtruj</strong></button>
        </div>
    </form>
    @*</div>*@
</div>
<div class="container-fluid">
    <div class="row imagetiles">
        @if(Model.Orders.Count().Equals(0))
        {
            <div class="col-xs-12">
                <div class="alert alert-info" role="alert">
                    Brak elementów do wyświetlenia
                </div>
            </div>
        }
        @for (int j = 0; j < Model.Orders.Count(); j++)
        {
            <div class="col-xl-2 col-lg-3 col-md-4 col-sm-6 col-xs-12">
                <form asp-controller="Account" asp-action="ProjectView" method="post" enctype="multipart/form-data">
                    <input type="image" src="@Model.Orders.ElementAt(j).UserScreenPath" class="img-responsive" name="@Model.Orders.ElementAt(j).OrderId" />
                </form>
                <div class="img-gallery-img-footer">
                    <div style="font-size: large; text-align: left">@Model.Orders.ElementAt(j).Name</div>
                    <div style="float: left; font-size: x-large">
                        <div id="rateYo-@Model.Orders.ElementAt(j).OrderId" style="float: left"></div>(@Model.Orders.ElementAt(j).RatingsCount)
                    </div>
                    <div class="image-caption-div">
                        <span class="glyphicon glyphicon-heart" style="font-size: x-large; color: red"></span><div style="font-size: x-large">@Model.Orders.ElementAt(j).Likes</div>
                    </div>
                    <script>

                                $("#rateYo-@Model.Orders.ElementAt(j).OrderId").rateYo({
            rating: (parseFloat(@Model.Orders.ElementAt(j).Rate.ToString().Replace(",", ".")) > 5 ? 0 : parseFloat(@Model.Orders.ElementAt(j).Rate.ToString().Replace(",", ".")))/5,
                                    maxValue: 1,
                                    numStars: 5,
                                    starWidth: "30px",
                                    readOnly: true
                                });
                    </script>
                </div>
            </div>


        }
    </div>
</div>

<div class="col-xs-12" style="text-align: center">
    @{ var numberOfElements = Model.NumberOfElements;
        var numberOfPages = Model.NumberOfPages;
        if (numberOfElements % Model.OnPage != 0)
        {
            numberOfPages += 1;
        }
        var next = Model.Page + 1;
        var prev = Model.Page - 1;
    }



    <ul class="pagination">
        <li><button class="btn btn-default" name="page" value="@prev" form="index-form">Poprzednia</button></li>
        <li><button class="btn btn-default" name="page" value="1" form="index-form">Pierwsza</button></li>
        @for (int i = 1; i <= numberOfPages; i++)
        {
            @if (i > Model.Page - 3 && i < Model.Page + 3)
            {
                @if (i <= Model.NumberOfPages)
                {

                    @if (i.Equals(Model.Page))
                    {
                        <li><button class="btn btn-primary" name="page" value="@i" form="index-form">@i</button></li>

                    }
                    else
                    {
                        <li><button class="btn btn-default" name="page" value="@i" form="index-form">@i</button></li>
                    }
                }

            }

        }
        <li><button class="btn btn-default" name="page" value="@numberOfPages" form="index-form">Ostatnia</button></li>
        <li><button class="btn btn-default" name="page" value="@next" form="index-form">Następna</button></li>
    </ul>
</div>
